on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: taw4acrjrc23a.azurecr.io
    steps:
    - uses: actions/checkout@master

    - uses: azure/docker-login@v1
      with:
        login-server: ${ACR_LOGIN_SERVER}
        username: ${{ secrets.acr_username }}
        password: ${{ secrets.acr_password }}

    - name: Build and push image to ACR
      env:
        CONTAINER_IMAGE: humongous-healthcare-api:${{ github.sha }}
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/Humongous.Healthcare" -f  "Humongous.Healthcare/Dockerfile" -t ${ACR_LOGIN_SERVER}/${CONTAINER_IMAGE} --label dockerfile-path=Humongous.Healthcare/Dockerfile
        docker push ${ACR_LOGIN_SERVER}/${CONTAINER_IMAGE}

    # - uses: azure/k8s-set-context@v1
    #   with:
    #      kubeconfig: ${{ secrets.aks_taw2aksjrc182_kubeConfig }}
    #   id: login

    # - name: Create namespace
    #   run: |
    #     namespacePresent=`kubectl get namespace | grep taw-health-checks | wc -l`
    #     if [ $namespacePresent -eq 0 ]
    #     then
    #         echo `kubectl create namespace taw-health-checks`
    #     fi

    # - uses: azure/k8s-create-secret@v1
    #   with:
    #     namespace: taw-health-checks
    #     container-registry-url: taw2acrjrc182.azurecr.io
    #     container-registry-username: ${{ secrets.acr_taw2acrjrc182_username }}
    #     container-registry-password: ${{ secrets.acr_taw2acrjrc182_password }}
    #     secret-name: taw2aksjrc18dockerauth

    # - uses: azure/k8s-deploy@v1.2
    #   with:
    #     namespace: taw-health-checks
    #     manifests: |
    #       manifests/deployment.yml
    #       manifests/service.yml
    #     images: |
    #       taw2acrjrc182.azurecr.io/taw2aksjrc182:${{ github.sha }}
    #     imagepullsecrets: |
    #       taw2aksjrc18dockerauth
